# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest
    environment: deploy

    strategy:
      fail-fast: true

    steps:
    - uses: actions/checkout@v3

    - name: Install Poetry v1.1.x with pipx
      run: pipx install 'poetry>=1.1,<1.2'

    - name: Set up Python 3.10.x (LTS)
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
        cache: 'poetry'

    - name: Install dependencies with Poetry
      run: poetry install --no-interaction --no-root

    - name: Test with pytest
      run: poetry run pytest --verbose
      env:
        RUSTMAPS_API_KEY: ${{ secrets.RUSTMAPS_API_KEY }}

    - name: Build package files with poetry
      run: poetry build --no-interaction

    - name: Build package and publish to PyPI
      run: poetry publish --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}
      env:
        PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
