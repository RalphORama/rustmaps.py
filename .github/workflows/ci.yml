name: CI

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

on:
  push

jobs:
  build:
    concurrency:
      group: ci-py_${{ matrix.python-version }}-poe_${{ matrix.poetry-version }}

    runs-on: ubuntu-latest
    environment: testing

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        poetry-version: ["1.1.14", "1.2.0b2"]

    steps:
    - uses: actions/checkout@v3

    - name: Install Poetry ${{ matrix.poetry-version }} with pipx
      run: pipx install poetry==${{ matrix.poetry-version }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'

    - name: Install dependencies with Poetry
      run: poetry install --verbose --ansi --no-interaction --no-root

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # run linting
        poetry run flake8 . --count --max-complexity=10 --statistics

    - name: Test with pytest
      run: poetry run pytest --verbose
      env:
        RUSTMAPS_API_KEY: ${{ secrets.RUSTMAPS_API_KEY }}

    - name: Build a test package
      run: poetry build --verbose --ansi
