name: CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    environment: testing
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        poetry-version: ["1.1.14", "1.2.0b2"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Poetry ${{ matrix.poetry-version }}
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: ${{ matrix.poetry-version }}

    - name: Install dependencies with Poetry
      run: |
        python -m pip install --upgrade pip
        poetry install --verbose --ansi --no-interaction --no-root

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --statistics

    - name: Test with pytest
      run: |
        poetry run pytest --verbose
      env:
        RUSTMAPS_API_KEY: ${{ secrets.RUSTMAPS_API_KEY }}

    - name: Create Python packages
      run: |
        poetry build --verbose --ansi
